<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- root-context.xml 안에 설정은 직접 bean태그를 정의해서 작성, property를 이용해서 여러 속성에 대하여 
		설정할 수 있음 -->
	<!-- spring에서 root-content.xml은 spring loading 되면서 읽어들이는 문서이므로, 주로 이미 만들어진 
		class들을 이용해서 스프링의 Bean으로 등록할 때 사용한다. 일반적인 상황이라면 프로젝트에 직접 작성하는 class들은 annotation을 
		이용하는 경우가 많고 외부 jar파일등으로 사용하는 클래스들은 <bean>태그를 이용해서 작성하는 경우가 대부분 -->

	<!-- java설정을 이용하는 경우 @Bean annotation 사용 -->


	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
	<!-- 	<property name="driverClassName"
			value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="jdbcUrl"
			value="jdbc:oracle:thin:@localhost:1521:XE">
		</property> -->
		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.Driverspy"></property>
		<property name="jdbcUrl"  value="jdbc:log4jdbc:oracle:thin:@localhost:1521:XE"></property>
		<property name="username" value="book_ex"></property>
		<property name="password" value="book_ex"></property>
	</bean>
	<!-- HikariCP Configuration -->
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"
		destroy-method="close">
		<constructor-arg ref="hikariConfig"></constructor-arg>
	</bean>
	<!-- mybatis에서 핵심적인 객체 SQLSession,SQLSessionFactory (내부적으로 SQLSession을 생성하는 
		존재) 개발에서는 SQLSession을 통해 Connection을 생성하거나 원하는 SQL을 저달하고 결과를 리턴받는 구조로 작성하게 
		됨 SQLSessionFactory를 등록하는 작업은 SqlSessionFatoryBean을 이용함, Mybatis의 패키지가 아니라 
		스프링과 연동 작업을 처리하는 mybatis-spring lib package임을 알 수 있음  -->
	<bean id="sqlSessionFatory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>

	</bean>
	<mybatis-spring:scan base-package="org.zerock.mapper"/>

	<context:component-scan
		base-package="org.zerock.sample"></context:component-scan>
</beans>
